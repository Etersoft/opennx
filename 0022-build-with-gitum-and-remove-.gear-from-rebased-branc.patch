From ba042722989fb90d352f578bc42c4717f603d8dc Mon Sep 17 00:00:00 2001
From: Boris Savelev <boris@altlinux.org>
Date: Wed, 28 Mar 2012 12:41:34 +0400
Subject: [PATCH 22/22] build with gitum and remove .gear from rebased branch
To: wine-patches <wine-patches@winehq.org>
Reply-To: wine-devel <wine-devel@winehq.org>

---
 .gear/rules                      |   2 -
 opennx-0.16-disable-opensc.patch |  95 --------------------
 opennx.spec                      | 183 ---------------------------------------
 opennx/LibOpenSC.cpp             |  11 +++
 opennx/configure                 |   2 +-
 opennx/configure.ac              |  16 +++-
 6 files changed, 27 insertions(+), 282 deletions(-)
 delete mode 100644 .gear/rules
 delete mode 100644 opennx-0.16-disable-opensc.patch
 delete mode 100644 opennx.spec

diff --git a/.gear/rules b/.gear/rules
deleted file mode 100644
index 25b8cc9..0000000
--- a/.gear/rules
+++ /dev/null
@@ -1,2 +0,0 @@
-tar: opennx
-copy: *.patch
diff --git a/opennx-0.16-disable-opensc.patch b/opennx-0.16-disable-opensc.patch
deleted file mode 100644
index 4b7094a..0000000
--- a/opennx-0.16-disable-opensc.patch
+++ /dev/null
@@ -1,95 +0,0 @@
---- opennx/LibOpenSC.cpp.orig
-+++ opennx/LibOpenSC.cpp
-@@ -65,10 +65,12 @@ ENABLE_TRACE;
- # define OPENSC_CTXNAME "opennx"
- #endif
- 
-+#ifdef SUPPORT_OPENSC
- #include <opensc/opensc.h>
- typedef int (*Tsc_establish_context)(sc_context_t **ctx, const char *app_name);
- typedef int (*Tsc_release_context)(sc_context_t *ctx);
- typedef int (*Tsc_detect_card_presence)(sc_reader_t *reader, int slot_id);
-+#endif // SUPPORT_OPENSC
- 
- #ifdef APP_OPENNX
- DEFINE_LOCAL_EVENT_TYPE(wxEVT_CARDINSERTED);
-@@ -130,6 +132,7 @@ CardWaitThread::~CardWaitThread()
-     wxThread::ExitCode
- CardWaitThread::Entry()
- {
-+#ifdef SUPPORT_OPENSC
- #ifdef __WXMAC__
-     m_bOk = true;
-     wxString cmd;
-@@ -232,6 +235,8 @@ CardWaitThread::Entry()
-     }
-     pfnsc_release_context(ctx);
- #endif
-+#endif // SUPPORT_OPENSC
-+
-     m_bOk = false;
-     ::myLogTrace(MYTRACETAG, wxT("terminating waiter thread"));
-     return 0;
-@@ -249,6 +254,7 @@ LibOpenSC::~LibOpenSC()
- }
- 
- bool LibOpenSC::HasOpenSC() {
-+#ifdef SUPPORT_OPENSC
-     wxLogNull ignoreErrors;
-     MyDynamicLibrary dll;
-     if (!dll.Load(wxT("libopensc")))
-@@ -263,6 +269,9 @@ bool LibOpenSC::HasOpenSC() {
-     if (!pfnsc_detect_card_presence)
-         return false;
-     return true;
-+#else // SUPPORT_OPENSC
-+    return false;
-+#endif // SUPPORT_OPENSC
- }
- 
- #ifdef APP_OPENNX
-@@ -277,6 +286,7 @@ int LibOpenSC::WaitForCard(CardWaiterDialog *d) {
- 
- bool LibOpenSC::WatchHotRemove(unsigned int ridx, long sshpid) {
- 
-+#ifdef SUPPORT_OPENSC
-     MyDynamicLibrary dll;
-     ::myLogTrace(MYTRACETAG, wxT("WatchHotRemove loading OpenSC"));
-     {
-@@ -383,5 +393,6 @@ bool LibOpenSC::WatchHotRemove(unsigned int ridx, long sshpid) {
-         ::wxLogError(_("Could not terminate nxssh"));
-     } else
-         return true;
-+#endif // SUPPORT_OPENSC
-     return false;
- }
---- opennx/configure.ac.orig
-+++ opennx/configure.ac
-@@ -144,6 +144,16 @@ if test "$ac_cv_enable_singlesession" = "YES" ; then
-     AC_DEFINE(SINGLE_SESSION,1,[Set to 1 for enabling single session support])
- fi
- 
-+ac_cv_enable_opensc=NO
-+AC_ARG_ENABLE([opensc],
-+	AS_HELP_STRING([--enable-opensc],
-+		[Enable opensc support (Default: NO, opensc upstream does not provide headers anymore)]),
-+	[ test "$enableval" = "yes" && ac_cv_enable_opensc=YES ]
-+)
-+if test "$ac_cv_enable_opensc" = "YES" ; then
-+    AC_DEFINE(SUPPORT_OPENSC,1,[Set to 1 for enabling OPENSC support])
-+fi
-+
- ac_cv_enable_usbip=NO
- AC_ARG_ENABLE([usbip],
- 	AS_HELP_STRING([--enable-usbip],
-@@ -427,8 +437,8 @@ case $target_os in
-         ;;
- esac
- 
--if test "$ac_cv_header_opensc_opensc_h" != "yes"; then
--    AC_MSG_ERROR([Need opensc/opensc.h])
-+if test "$ac_cv_enable_opensc" = "YES" -a "$ac_cv_header_opensc_opensc_h" != "yes"; then
-+    AC_MSG_ERROR([Need opensc/opensc.h when compiling with opensc support])
- fi
- if test "$ac_cv_enable_usbip" = "YES" -a "$ac_cv_header_usb_h" != "yes"; then
-     AC_MSG_ERROR([Need usb.h when compiling with usbip support])
diff --git a/opennx.spec b/opennx.spec
deleted file mode 100644
index 817de71..0000000
--- a/opennx.spec
+++ /dev/null
@@ -1,183 +0,0 @@
-# Enable USBIP support
-%define with_usbip %{?_with_usbip: 1} %{?!_with_usbip: 0}
-
-Summary: An OpenSource NX client
-Name: opennx
-Version: 0.16
-Release: alt16.svn634
-License: LGPL/GPL
-Group: Networking/Remote access
-Url: http://sourceforge.net/projects/opennx
-Packager: Boris Savelev <boris@altlinux.org>
-
-Source: %name-%version.tar
-
-Patch: %name-0.16-disable-opensc.patch
-
-%if %with_usbip
-Requires: usbip2-nxclient
-%endif
-
-# Automatically added by buildreq on Sat Sep 19 2009
-BuildRequires: gcc-c++ imake libSM-devel libXmu-devel nx ImageMagick-tools
-BuildRequires: libopensc-devel libsmbclient-devel
-BuildRequires: libwxGTK-devel xorg-cf-files zip libcups-devel
-
-%description
-opennx is an OSS replacement for Nomachine's NX client.
-
-%prep
-%setup
-
-#patch0 -p1
-
-test -d conf || mkdir conf
-#Convince gettextize not to modify EXTRA_DIST
-test -f conf/config.rpath || touch conf/config.rpath
-#Convince gettextize not to modify AC_CONFIG_FILES
-test -f po/Makefile.in.in || touch po/Makefile.in.in
-#Tweak gettextize
-#Stupid gettextize uses /dev/tty for interactively getting a
-#confirm of it's "oh so incredibly important notes".
-#YES, i've read them at least a dozen times and now, i REALLY
-#don't want to hit RETURN anymore!
-GETTEXTIZE=`which gettextize`
-test -n "$GETTEXTIZE" && \
-    sed -e 's@/dev/tty@/dev/null@' "$GETTEXTIZE" > gettextize.local
-test -f gettextize.local && sh gettextize.local -f --no-changelog
-rm -f gettextize.local
-test -e conf/mkinstalldirs || touch conf/mkinstalldirs
-%autoreconf
-
-%build
-%configure \
-    --bindir=%_libdir/%name/bin \
-    --datadir=%_datadir/%name \
-    --localedir=%_datadir/locale \
-%if %with_usbip
-    --enable-usbip \
-%endif
-    --with-nxproto=3.3.0
-
-%make_build
-
-%install
-%makeinstall_std
-
-mkdir -p %buildroot{%_bindir,%_desktopdir}
-
-ln -s ../..%_libdir/%name/bin/%name %buildroot%_bindir/%name
-ln -s ../../share/%name %buildroot%_libdir/%name/share
-for f in nxesd nxssh nxservice nxproxy ; do
-    ln -s  ../../../bin/$f %buildroot%_libdir/%name/bin/$f
-done
-
-mkdir -p %buildroot%_libdir/%name/%_lib
-
-for lib in libsmbclient.so libcups.so ; do
-    ln -s %_libdir/`readlink %_libdir/$lib` %buildroot%_libdir/%name/%_lib/$lib
-done
-
-cp %buildroot%_datadir/%name/applnk/xdg/*.desktop %buildroot%_desktopdir
-rm -rf %buildroot%_datadir/%name/applnk
-rm -rf %buildroot%_datadir/%name/icons
-subst "s|/usr/NX/bin|%_bindir|g" %buildroot%_desktopdir/*
-
-install -d %buildroot{%_niconsdir,%_miconsdir,%_liconsdir}
-for f in nx opennx-admin opennx-wizard ; do
-    convert -size 16x16 ./extres/scalable/apps/$f.svg %buildroot%_miconsdir/$f.png
-    convert -size 32x32 ./extres/scalable/apps/$f.svg %buildroot%_niconsdir/$f.png
-    convert -size 48x48 ./extres/scalable/apps/$f.svg %buildroot%_liconsdir/$f.png
-done
-
-install -d %buildroot%_iconsdir/hicolor/{16x16,32x32,48x48}/mimetypes/
-convert -background none -size 16x16 ./extres/scalable/mimetypes/nx-desktop.svg %buildroot%_iconsdir/hicolor/16x16/mimetypes/nx-desktop.png
-convert -background none -size 32x32 ./extres/scalable/mimetypes/nx-desktop.svg %buildroot%_iconsdir/hicolor/32x32/mimetypes/nx-desktop.png
-convert -background none -size 48x48 ./extres/scalable/mimetypes/nx-desktop.svg %buildroot%_iconsdir/hicolor/48x48/mimetypes/nx-desktop.png
-
-%if %with_usbip
-install -d -m 755 %buildroot%_sysconfdir/udev/rules.d
-install -m 644 etc/*.rules %buildroot%_sysconfdir/udev/rules.d
-%endif
-
-%find_lang %name
-
-%if %with_usbip
-%pre
-%_sbindir/groupadd -r opennx || :
-%endif
-
-%files -f %name.lang
-%doc COPYING INSTALL
-%_bindir/%name
-%_libdir/%name
-%_datadir/%name
-%_desktopdir/*.desktop
-%_liconsdir/*.png
-%_niconsdir/*.png
-%_miconsdir/*.png
-%_iconsdir/hicolor/*/mimetypes/nx-desktop.png
-%if %with_usbip
-%_sysconfdir/udev
-%endif
-
-%changelog
-* Fri Jun 17 2011 Boris Savelev <boris@altlinux.org> 0.16-alt16.svn634
-- update from trunk
-
-* Wed Mar 02 2011 Boris Savelev <boris@altlinux.org> 0.16-alt15.svn611
-- update from trunk
-
-* Mon Feb 28 2011 Lenar Shakirov <snejok@altlinux.ru> 0.16-alt14.svn595
-- build fixed: disable opensc support by default
-
-* Tue Feb 15 2011 Lenar Shakirov <snejok@altlinux.ru> 0.16-alt13.svn595
-- lib{smbclient,cups}.so symlinks packaging fixed for x86_64
-
-* Thu Nov 18 2010 Boris Savelev <boris@altlinux.org> 0.16-alt12.svn595
-- update from trunk
-
-* Sat Nov 13 2010 Lenar Shakirov <snejok@altlinux.ru> 0.16-alt11.svn567
-- package nx-desktop.png (closes: #24467)
-
-* Thu Sep 09 2010 Boris Savelev <boris@altlinux.org> 0.16-alt10.svn567
-- update from trunk
-
-* Tue Aug 31 2010 Boris Savelev <boris@altlinux.org> 0.16-alt9.svn555
-- update from trunk
-
-* Mon Aug 02 2010 Boris Savelev <boris@altlinux.org> 0.16-alt8.svn547
-- update from trunk
-- fix build
-
-* Sat Feb 13 2010 Boris Savelev <boris@altlinux.org> 0.16-alt7.svn481
-- update from trunk
-
-* Mon Jan 25 2010 Boris Savelev <boris@altlinux.org> 0.16-alt6.svn450
-- update from trunk (work with proxy with authorization)
-
-* Sat Jan 16 2010 Boris Savelev <boris@altlinux.org> 0.16-alt5.svn446
-- update from trunk
-- add russian localization
-
-* Thu Nov 12 2009 Boris Savelev <boris@altlinux.org> 0.16-alt4.svn444
-- update from trunk
-- add symlink for nxproxy
-
-* Sun Oct 11 2009 Boris Savelev <boris@altlinux.org> 0.16-alt3.svn442
-- update from trunk
-- add symlinks for cups and samba
-
-* Thu Sep 24 2009 Boris Savelev <boris@altlinux.org> 0.16-alt2.svn427
-- update buildreq
-- fix repocop warning
-
-* Sat Sep 19 2009 Boris Savelev <boris@altlinux.org> 0.16-alt1.svn418
-- intial build for Sisyphus
-
-* Sun Apr 19 2009 Fritz Elfert <fritz@fritz-elfert.de>
-- Set prefix to /opt/lsb/%name for FHS compliance
-* Wed Apr 15 2009 Michael Kromer <michael.kromer@millenux.com>
-- Fixes for SuSE Plattform (openSuSE/SLES)
-* Sun Jan  7 2007 Fritz Elfert <fritz@fritz-elfert.de>
-- Initial package
diff --git a/opennx/LibOpenSC.cpp b/opennx/LibOpenSC.cpp
index 97a8c22..f579fcb 100644
--- a/opennx/LibOpenSC.cpp
+++ b/opennx/LibOpenSC.cpp
@@ -65,10 +65,12 @@ ENABLE_TRACE;
 # define OPENSC_CTXNAME "opennx"
 #endif
 
+#ifdef SUPPORT_OPENSC
 #include <opensc/opensc.h>
 typedef int (*Tsc_establish_context)(sc_context_t **ctx, const char *app_name);
 typedef int (*Tsc_release_context)(sc_context_t *ctx);
 typedef int (*Tsc_detect_card_presence)(sc_reader_t *reader, int slot_id);
+#endif // SUPPORT_OPENSC
 
 #ifdef APP_OPENNX
 DEFINE_LOCAL_EVENT_TYPE(wxEVT_CARDINSERTED);
@@ -130,6 +132,7 @@ CardWaitThread::~CardWaitThread()
     wxThread::ExitCode
 CardWaitThread::Entry()
 {
+#ifdef SUPPORT_OPENSC
 #ifdef __WXMAC__
     m_bOk = true;
     wxString cmd;
@@ -232,6 +235,8 @@ CardWaitThread::Entry()
     }
     pfnsc_release_context(ctx);
 #endif
+#endif // SUPPORT_OPENSC
+
     m_bOk = false;
     ::myLogTrace(MYTRACETAG, wxT("terminating waiter thread"));
     return 0;
@@ -249,6 +254,7 @@ LibOpenSC::~LibOpenSC()
 }
 
 bool LibOpenSC::HasOpenSC() {
+#ifdef SUPPORT_OPENSC
     wxLogNull ignoreErrors;
     MyDynamicLibrary dll;
     if (!dll.Load(wxT("libopensc")))
@@ -263,6 +269,9 @@ bool LibOpenSC::HasOpenSC() {
     if (!pfnsc_detect_card_presence)
         return false;
     return true;
+#else // SUPPORT_OPENSC
+    return false;
+#endif // SUPPORT_OPENSC
 }
 
 #ifdef APP_OPENNX
@@ -277,6 +286,7 @@ int LibOpenSC::WaitForCard(CardWaiterDialog *d) {
 
 bool LibOpenSC::WatchHotRemove(unsigned int ridx, long sshpid) {
 
+#ifdef SUPPORT_OPENSC
     MyDynamicLibrary dll;
     ::myLogTrace(MYTRACETAG, wxT("WatchHotRemove loading OpenSC"));
     {
@@ -383,5 +393,6 @@ bool LibOpenSC::WatchHotRemove(unsigned int ridx, long sshpid) {
 //        wxLogError(wxT("Could not terminate nxssh"));
     } else
         return true;
+#endif // SUPPORT_OPENSC
     return false;
 }
diff --git a/opennx/configure b/opennx/configure
index 80a4342..f1117b7 100755
--- a/opennx/configure
+++ b/opennx/configure
@@ -20575,7 +20575,7 @@ FULLVERSION=$_ver
 
 
 
-for ac_header in cups/cups.h cups.h libsmbclient.h usb.h
+for ac_header in cups/cups.h cups.h samba-4.0/libsmbclient.h libsmbclient.h usb.h
 do :
   as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
 ac_fn_c_check_header_mongrel "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default"
diff --git a/opennx/configure.ac b/opennx/configure.ac
index 41a9ffe..cb8201d 100644
--- a/opennx/configure.ac
+++ b/opennx/configure.ac
@@ -164,6 +164,16 @@ if test "$ac_cv_enable_singlesession" = "YES" ; then
     AC_DEFINE(SINGLE_SESSION,1,[Set to 1 for enabling single session support])
 fi
 
+ac_cv_enable_opensc=NO
+AC_ARG_ENABLE([opensc],
+	AS_HELP_STRING([--enable-opensc],
+		[Enable opensc support (Default: NO, opensc upstream does not provide headers anymore)]),
+	[ test "$enableval" = "yes" && ac_cv_enable_opensc=YES ]
+)
+if test "$ac_cv_enable_opensc" = "YES" ; then
+    AC_DEFINE(SUPPORT_OPENSC,1,[Set to 1 for enabling OPENSC support])
+fi
+
 ac_cv_enable_usbip=NO
 AC_ARG_ENABLE([usbip],
 	AS_HELP_STRING([--enable-usbip],
@@ -452,7 +462,11 @@ FE_SVNREV([SVNREV])
 AC_DEFINE_UNQUOTED(SVNREV,"$SVNREV",[SVN revision])
 FE_RCVERSION
 
-AC_CHECK_HEADERS([cups/cups.h cups.h libsmbclient.h usb.h])
+AC_CHECK_HEADERS([cups/cups.h cups.h samba-4.0/libsmbclient.h libsmbclient.h usb.h])
+
+if test "$ac_cv_enable_opensc" = "YES" -a "$ac_cv_header_opensc_opensc_h" != "yes"; then
+    AC_MSG_ERROR([Need opensc/opensc.h when compiling with opensc support])
+fi
 
 if test "$ac_cv_enable_usbip" = "YES" -a "$ac_cv_header_usb_h" != "yes"; then
     AC_MSG_ERROR([Need usb.h when compiling with usbip support])
-- 
2.1.4

